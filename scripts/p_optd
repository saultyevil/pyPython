#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Plot the optical depth for a model."""

import argparse as ap

from matplotlib import pyplot as plt

import pypython
from pypython.spectrum.plot import optical_depth


def setup_script():
    """Parse the different modes this script can be run from the command line.

    Returns
    -------
    setup: tuple
        A list containing all of the different setup of parameters for plotting.

        setup = (
            root,
            fp,
            xmin,
            xmax,
            frequency_space,
            absorption_edges,
            axes_scales,
            display
        )
    """

    p = ap.ArgumentParser(description=__doc__)

    p.add_argument("root", type=str, help="The root name of the simulation.")
    p.add_argument("-fp", "--filepath", default=".", help="The directory containing the simulation.")
    p.add_argument("-xl", "--xmin", type=float, default=None, help="The lower x-axis boundary to display.")
    p.add_argument("-xu", "--xmax", type=float, default=None, help="The upper x-axis boundary to display.")
    p.add_argument("-s",
                   "--scales",
                   default="loglog",
                   choices=["logx", "logy", "loglog", "linlin"],
                   help="The axes scaling to use: logx, logy, loglog, linlin.")
    p.add_argument("-a",
                   "--absorption_edges",
                   action="store_true",
                   default=False,
                   help="Plot labels for important absorption edges.")
    p.add_argument("--display", action="store_true", default=False, help="Display the plot before exiting the script.")

    args = p.parse_args()

    return args.root, args.filepath, args.xmin, args.xmax, args.absorption_edges, args.scales, args.display


def main():
    """The main function of the script.

    Returns
    -------
    fig: plt.Figure
        The matplotlib Figure object for the created plot.
    ax: plt.Axes
        The matplotlib Axes objects for the plot panels.
    """

    root, fp, xmin, xmax, absorption_edges, axes_scales, display = setup_script()

    fig, ax = optical_depth(pypython.Spectrum(root, fp), "all", xmin, xmax, axes_scales, absorption_edges, True,
                            display)

    return fig, ax


if __name__ == "__main__":
    fig, ax = main()
